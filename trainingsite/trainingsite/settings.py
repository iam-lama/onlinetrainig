"""
Django settings for trainingsite project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
# from django.utils.translation import gettext_lazy as _
from django.utils.translation import ugettext_lazy as _


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'uef0@%v2!**22y+uv8g1mkdp0ph+3y+2bdxs0e=a$d0@i51p@0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
#'.ngrok.io'


# Application definition

INSTALLED_APPS = [
    'trainboard',
    'accounts',
    'modeltranslation',
    'jet.dashboard',
    'jet',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'crispy_forms',
    'django_instagram',
    'sorl.thumbnail',
    'braintree',
    'twilio',
    'phonenumber_field',
    'sms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',    
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'trainingsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'trainboard.context_processors.instagram_feed',
            ],
        },
    },
]

WSGI_APPLICATION = 'trainingsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME':'trainingsys',
        'USER':'postgres',
        'PASSWORD':'1234',
        'HOST':'localhost',
        'PORT':'5432',

    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
#List of languages support by the site 
# gettext = lambda s: s
# LANGUAGES = [
#     ('en', _('English')),
#     ('ar', _('Arabic')),

# ]

LANGUAGES = (
    ('en', _('English')),
    ('ar', _('Arabic')),
)
MODELTRANSLATION_LANGUAGES = ('en', 'ar')
#MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'
# MODELTRANSLATION_TRANSLATION_FILES = (
#     'trainboard.translation',
#     'accounts.translation',
# )
# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

CRISPY_TEMPLATE_PACK = 'bootstrap4'

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)
AUTH_USER_MODEL = 'accounts.User'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = 'index'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only

BRAINTREE_MERCHANT = '869hx73znpdbqdb5'
BRAINTREE_PUBLIC_KEY = 'fk2svyvrb5thgpym'
BRAINTREE_PRIVATE_KEY = 'f8ff21d0aa14f015c9fd54d52dc54081'


TWILIO_ACCOUNT_SID = 'AC8e701e0f67a77a7bad50a7a5d47af04a'
TWILIO_AUTH_TOKEN = 'eec201e9e16bf12249ee1d8c2e0c635a'
TWILIO_NUMBER = '+12053031351'
#Bayment
#Sandbox user = 'trainingdj'
#Sandbox pass='trainingdj123456'


# DATE_INPUT_FORMATS = ['%d-%m-%Y']
# in the form 
# date_of_birth = DateField(input_formats=settings.DATE_INPUT_FORMATS)


#Instagram_code = '1d2869a48d5a4e9692ee2a4333e67e9b'
#access_token=1986355835.e69ee55.8855dec9090e4c19a1053fb1505dc01d

# api = InstagramAPI(client_id='e69ee559e2f04050b6ae9eb3a2cd607c', 
#     client_secret='76455b34224a40ca8904696f9eb8a55b')

# access_token = "1986355835.e69ee55.8855dec9090e4c19a1053fb1505dc01d"
# client_secret = "76455b34224a40ca8904696f9eb8a55b"
# api = InstagramAPI(access_token=access_token, client_secret=client_secret)
# recent_media, next_ = api.user_recent_media(user_id=1986355835, count=10)


# https://api.instagram.com/oauth/authorize/?client_id=e69ee559e2f04050b6ae9eb3a2cd607c&redirect_uri=http://localhost:8000/instagram/&response_type=code&scope=public_content



